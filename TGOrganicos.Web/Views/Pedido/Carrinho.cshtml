@model TGOrganicos.Web.Models.PedidoCadastro
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div></div>

@using (Html.BeginForm("Salvar", "Pedido", FormMethod.Post, new { @class = "form-pedidos", role = "form", @id = "form-pedidos", @autocomplete = "off", enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(c=> c.Id)

    <section class="ftco-section ftco-cart">
        <div class="container">
            <div class="row">
                <div class="col-md-12 ftco-animate">
                    <div class="cart-list">
                        <table class="table carrinhotable" id="table-carrinho">
                            <thead class="thead-primary">
                                <tr class="text-center">
                                    <th>&nbsp;</th>
                                    <th>Nome</th>
                                    <th>Quantidade</th>
                                    <th>Preço</th>
                                    <th>Total</th>
                                </tr>
                            </thead>
                            <tbody id="body-carrinho">
                                @for (var i = 0; i < Model.ItensPedido.Count(); i++)
                                {
                                    <tr class="text-center">
                                        <td>
                                            @Html.HiddenFor(c => c.ItensPedido[i].Remove)
                                            @Html.HiddenFor(c => c.ItensPedido[i].IdProduto)
                                            <a role="button" class="btn-remove"><span class="ion-ios-close"></span></a>
                                        </td>
                                        <td>
                                            <div class="input-group mb-3">
                                                @Html.TextBoxFor(c => c.ItensPedido[i].NomeProduto, new { @readonly = "readonly", @class = "quantity form-control input-number", @style = "box-shadow: 0 0 0 0 !important; border: 0 none!important;" })
                                            </div>
                                        </td>
                                        <td class="quantity">
                                            ';
                                            <div class="input-group mb-3">
                                                @Html.TextBoxFor(c => c.ItensPedido[i].Quantidade, new { @readonly = "readonly", @class = "quantity form-control input-number  input-semborda", @style = "box-shadow: 0 0 0 0 !important; border: 0 none!important;" })
                                            </div>
                                        </td>
                                        <td>
                                            <div class="input-group mb-3">
                                                @Html.TextBoxFor(c => c.ItensPedido[i].ValorUnitario, new { @readonly = "readonly", @class = "quantity form-control input-number money", @style = "box-shadow: 0 0 0 0 !important; border: 0 none!important;" })
                                                @Html.TextBoxFor(c => c.ItensPedido[i].UnidadeMedida, new { @readonly = "readonly", @class = "quantity form-control input-number", @style = "box-shadow: 0 0 0 0 !important; border: 0 none!important;", @hidden = "hidden" })
                                            </div>
                                        </td>
                                        <td>
                                            <div class="input-group mb-3">
                                                @Html.TextBoxFor(c => c.ItensPedido[i].ValorTotal, new { @readonly = "readonly", @class = "quantity form-control input-number money input-semborda", @style = "box-shadow: 0 0 0 0 !important; border: 0 none!important;" })
                                            </div>
                                        </td>
                                    </tr>

                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="row justify-content-end">

                <div class="col-lg-4 mt-5 cart-wrap ftco-animate">
                    <div class="cart-total mb-3">
                        <p class="d-flex total-price">
                            <span style="align-items: center; display: flex;">Total</span>
                            @Html.TextBoxFor(c => c.ValorPedido, new { @readonly = "readonly", @class = "money form-control", @style = "box-shadow: 0 0 0 0 !important; border: 0 none!important;" })
                        </p>
                    </div>

                </div>
            </div>
            <div class="row justify-content-end">
                <div class="col-lg-4 mt-3 cart-wrap ftco-animate">
                    <div class="btn-group">
                        <button type="submit" class="btn btn-primary py-3 px-3">Finalizar compra</button>
                        <a onclick=" localStorage.clear(); location.reload(); localStorage.setItem('qtdcarrinho' + 1, 0);" class="btn btn-danger py-3 px-3" style="color:white">Limpar carrinho</a>
                    </div>
                </div>
            </div>
        </div>
    </section>
}

@section Scripts{

    <script src="~/Scripts/jquery.mask.js"></script>
    <script src="~/Scripts/jquery.maskMoney.min.js.js"></script>

    <script>
        $(document).ready(function () {

            for (var i = 0; i <= 99; i++) {
                var prod = localStorage.getItem("IdProduto" + i + "");

                if (prod != null) {

                    var row = `<tr class="text-center add-row">
                       <td>
                           <input id="ItensPedido_` + i + `__Remove" name="ItensPedido[' + i + '].Remove" value="false" hidden />
                           <input id="ItensPedido_` + i + `__IdProduto" name="ItensPedido[` + i + `].IdProduto" value="` + localStorage.getItem("IdProduto" + i) + `" hidden />
                           <a role="button" class="btn-remove"><span class="ion-ios-close"></span></a>
                       </td>
                       <td>
                          <div class="input-group mb-3">
                               <input id="ItensPedido_` + i + `__NomeProduto" name="ItensPedido[` + i + `].NomeProduto" value="` + localStorage.getItem("NomeProduto" + i) + `" class="quantity form-control input-number" style="box-shadow: 0 0 0 0 !important; border: 0 none!important;" readonly/>
                          </div>
                       </td>
                       <td class="quantity">
                          <div class="input-group mb-3">
                              <input id="ItensPedido_` + i + `__Quantidade" name="ItensPedido[` + i + `].Quantidade" value="` + localStorage.getItem("Quantidade" + i) + `" class="quantity form-control input-number input-semborda" readonly style="box-shadow: 0 0 0 0 !important; border: 0 none!important;"/>
                          </div>
                       </td>
                       <td>
                          <div class="input-group mb-3">
                               <input id="ItensPedido_` + i + `__ValorUnitario" name="ItensPedido[` + i + `].ValorUnitario" value="` + localStorage.getItem("ValorUnitario" + i) + `" class="quantity form-control input-number money" readonly style="box-shadow: 0 0 0 0 !important; border: 0 none!important;"/> <p style="margin-top: auto!important;"> / ` + localStorage.getItem("UnidadeMedida" + i) + `</p>
                               <input id="ItensPedido_` + i + `__UnidadeMedida" name="ItensPedido[` + i + `].UnidadeMedida" value="` + localStorage.getItem("UnidadeMedida" + i) + `" class="quantity form-control input-number" readonly hidden/>
                          </div>
                       </td>
                       <td>
                           <div class="input-group mb-3">
                               <input id="ItensPedido_` + i + `__ValorTotal" name="ItensPedido[` + i + `].ValorTotal" value="` + localStorage.getItem("ValorTotal" + i) + `" class="quantity form-control input-number money input-semborda" readonly style="box-shadow: 0 0 0 0 !important; border: 0 none!important;"/>
                           </div>
                       </td>
                    </tr>`;

                    $(".carrinhotable tbody").append(row);
                    formatInputs()
                    CalculaValor()
                }
            }


        });

        $(document).on('click', '.btn-remove', function () {

            var row = $(this).closest("tr")

            var flag = $(row).find(`[name*="Remove"]`);
            $(flag).val(true)

            // Oculta linha
            $(row).attr("hidden", "hidden")

            CalculaValor()

        });

        function CalculaValor() {

            var rows = $("#body-carrinho tr")
            var totalValorLinha = 0
            $(rows).each(function () {

                totalValorLinha += $(this).find(`[name$="ValorTotal"]`).maskMoney('unmasked')[0]

            });
            $('#ValorPedido').val(Number(totalValorLinha).toFixed(2).replace(".", ","))


        }

        function formatInputs() {
            $('.decimal').mask("#.##0,00", { reverse: true });
            $(".money").maskMoney({ prefix: 'R$ ', allowNegative: true, allowZero: true, thousands: '.', decimal: ',', affixesStay: true }).maskMoney('mask');

        }

    </script>


}

